# -*- coding: utf-8 -*-

"""
plastiqpublicapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from plastiqpublicapi.models.pagination_object import PaginationObject
from plastiqpublicapi.models.payment import Payment


class PaymentsResponse(object):

    """Implementation of the 'Payments Response' model.

    TODO: type model description here.

    Attributes:
        data (list of Payment): TODO: type description here.
        pagination (PaginationObject): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "data": 'data',
        "pagination": 'pagination'
    }

    def __init__(self,
                 data=None,
                 pagination=None):
        """Constructor for the PaymentsResponse class"""

        # Initialize members of the class
        self.data = data
        self.pagination = pagination

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        data = None
        if dictionary.get('data') is not None:
            data = [Payment.from_dictionary(x) for x in dictionary.get('data')]
        pagination = PaginationObject.from_dictionary(dictionary.get('pagination')) if dictionary.get('pagination') else None

        # Return an object of this model
        return cls(data,
                   pagination)
