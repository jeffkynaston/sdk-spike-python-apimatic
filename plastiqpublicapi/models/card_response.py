# -*- coding: utf-8 -*-

"""
plastiqpublicapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from plastiqpublicapi.models.address import Address


class CardResponse(object):

    """Implementation of the 'CardResponse' model.

    TODO: type model description here.

    Attributes:
        last_4 (string): Last 4 digits of card number
        brand (string): TODO: type description here.
        expiration_month (string): TODO: type description here.
        expiration_year (string): TODO: type description here.
        created_at (string): TODO: type description here.
        billing_address (Address): TODO: type description here.
        sub_type (SubTypeEnum): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "last_4": 'last4',
        "brand": 'brand',
        "expiration_month": 'expirationMonth',
        "expiration_year": 'expirationYear',
        "created_at": 'createdAt',
        "billing_address": 'billingAddress',
        "sub_type": 'subType'
    }

    def __init__(self,
                 last_4=None,
                 brand=None,
                 expiration_month=None,
                 expiration_year=None,
                 created_at=None,
                 billing_address=None,
                 sub_type=None):
        """Constructor for the CardResponse class"""

        # Initialize members of the class
        self.last_4 = last_4
        self.brand = brand
        self.expiration_month = expiration_month
        self.expiration_year = expiration_year
        self.created_at = created_at
        self.billing_address = billing_address
        self.sub_type = sub_type

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        last_4 = dictionary.get('last4')
        brand = dictionary.get('brand')
        expiration_month = dictionary.get('expirationMonth')
        expiration_year = dictionary.get('expirationYear')
        created_at = dictionary.get('createdAt')
        billing_address = Address.from_dictionary(dictionary.get('billingAddress')) if dictionary.get('billingAddress') else None
        sub_type = dictionary.get('subType')

        # Return an object of this model
        return cls(last_4,
                   brand,
                   expiration_month,
                   expiration_year,
                   created_at,
                   billing_address,
                   sub_type)
