# -*- coding: utf-8 -*-

"""
plastiqpublicapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class PaginationObject(object):

    """Implementation of the 'PaginationObject' model.

    TODO: type model description here.

    Attributes:
        offset (int): TODO: type description here.
        limit (int): TODO: type description here.
        total (int): TODO: type description here.
        has_next_page (bool): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "offset": 'offset',
        "limit": 'limit',
        "total": 'total',
        "has_next_page": 'hasNextPage'
    }

    def __init__(self,
                 offset=None,
                 limit=None,
                 total=None,
                 has_next_page=None):
        """Constructor for the PaginationObject class"""

        # Initialize members of the class
        self.offset = offset
        self.limit = limit
        self.total = total
        self.has_next_page = has_next_page

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        offset = dictionary.get('offset')
        limit = dictionary.get('limit')
        total = dictionary.get('total')
        has_next_page = dictionary.get('hasNextPage')

        # Return an object of this model
        return cls(offset,
                   limit,
                   total,
                   has_next_page)
