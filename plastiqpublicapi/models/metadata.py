# -*- coding: utf-8 -*-

"""
plastiqpublicapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class Metadata(object):

    """Implementation of the 'Metadata' model.

    TODO: type model description here.

    Attributes:
        key (string): TODO: type description here.
        success_action_status (string): TODO: type description here.
        bucket (string): TODO: type description here.
        x_amz_algorithm (string): TODO: type description here.
        x_amz_credential (string): TODO: type description here.
        x_amz_date (string): TODO: type description here.
        x_amz_security_token (string): TODO: type description here.
        policy (string): TODO: type description here.
        x_amz_signature (string): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "key": 'Key',
        "success_action_status": 'success_action_status',
        "bucket": 'bucket',
        "x_amz_algorithm": 'X-Amz-Algorithm',
        "x_amz_credential": 'X-Amz-Credential',
        "x_amz_date": 'X-Amz-Date',
        "x_amz_security_token": 'X-Amz-Security-Token',
        "policy": 'Policy',
        "x_amz_signature": 'X-Amz-Signature'
    }

    def __init__(self,
                 key=None,
                 success_action_status=None,
                 bucket=None,
                 x_amz_algorithm=None,
                 x_amz_credential=None,
                 x_amz_date=None,
                 x_amz_security_token=None,
                 policy=None,
                 x_amz_signature=None):
        """Constructor for the Metadata class"""

        # Initialize members of the class
        self.key = key
        self.success_action_status = success_action_status
        self.bucket = bucket
        self.x_amz_algorithm = x_amz_algorithm
        self.x_amz_credential = x_amz_credential
        self.x_amz_date = x_amz_date
        self.x_amz_security_token = x_amz_security_token
        self.policy = policy
        self.x_amz_signature = x_amz_signature

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        key = dictionary.get('Key')
        success_action_status = dictionary.get('success_action_status')
        bucket = dictionary.get('bucket')
        x_amz_algorithm = dictionary.get('X-Amz-Algorithm')
        x_amz_credential = dictionary.get('X-Amz-Credential')
        x_amz_date = dictionary.get('X-Amz-Date')
        x_amz_security_token = dictionary.get('X-Amz-Security-Token')
        policy = dictionary.get('Policy')
        x_amz_signature = dictionary.get('X-Amz-Signature')

        # Return an object of this model
        return cls(key,
                   success_action_status,
                   bucket,
                   x_amz_algorithm,
                   x_amz_credential,
                   x_amz_date,
                   x_amz_security_token,
                   policy,
                   x_amz_signature)
