# -*- coding: utf-8 -*-

"""
plastiqpublicapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from plastiqpublicapi.models.payer_id import PayerId


class CreatePaymentMethodRequest(object):

    """Implementation of the 'CreatePaymentMethodRequest' model.

    TODO: type model description here.

    Attributes:
        mtype (Type2Enum): TODO: type description here.
        data (object): TODO: type description here.
        payer (PayerId): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "mtype": 'type',
        "data": 'data',
        "payer": 'payer'
    }

    def __init__(self,
                 mtype=None,
                 data=None,
                 payer=None):
        """Constructor for the CreatePaymentMethodRequest class"""

        # Initialize members of the class
        self.mtype = mtype
        self.data = data
        self.payer = payer

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        mtype = dictionary.get('type')
        data = dictionary.get('data')
        payer = PayerId.from_dictionary(dictionary.get('payer')) if dictionary.get('payer') else None

        # Return an object of this model
        return cls(mtype,
                   data,
                   payer)
