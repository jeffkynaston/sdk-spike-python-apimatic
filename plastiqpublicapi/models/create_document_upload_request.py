# -*- coding: utf-8 -*-

"""
plastiqpublicapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from plastiqpublicapi.models.payer_id import PayerId


class CreateDocumentUploadRequest(object):

    """Implementation of the 'CreateDocumentUploadRequest' model.

    TODO: type model description here.

    Attributes:
        payer (PayerId): TODO: type description here.
        mtype (string): TODO: type description here.
        file_type (FileTypeEnum): TODO: type description here.
        filename (string): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "payer": 'payer',
        "mtype": 'type',
        "file_type": 'fileType',
        "filename": 'filename'
    }

    def __init__(self,
                 payer=None,
                 mtype='INVOICE',
                 file_type=None,
                 filename=None):
        """Constructor for the CreateDocumentUploadRequest class"""

        # Initialize members of the class
        self.payer = payer
        self.mtype = mtype
        self.file_type = file_type
        self.filename = filename

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        payer = PayerId.from_dictionary(dictionary.get('payer')) if dictionary.get('payer') else None
        mtype = dictionary.get("type") if dictionary.get("type") else 'INVOICE'
        file_type = dictionary.get('fileType')
        filename = dictionary.get('filename')

        # Return an object of this model
        return cls(payer,
                   mtype,
                   file_type,
                   filename)
