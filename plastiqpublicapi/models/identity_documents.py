# -*- coding: utf-8 -*-

"""
plastiqpublicapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class IdentityDocuments(object):

    """Implementation of the 'IdentityDocuments' model.

    This is currently only required if a Payment method from Texas is added.

    Attributes:
        mtype (Type5Enum): TODO: type description here.
        value (string): TODO: type description here.
        country_of_issuance (string): Passport country of issuance. Two-letter
            country code (ISO 3166-1 alpha-2).

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "mtype": 'type',
        "value": 'value',
        "country_of_issuance": 'countryOfIssuance'
    }

    def __init__(self,
                 mtype=None,
                 value=None,
                 country_of_issuance=None):
        """Constructor for the IdentityDocuments class"""

        # Initialize members of the class
        self.mtype = mtype
        self.value = value
        self.country_of_issuance = country_of_issuance

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        mtype = dictionary.get('type')
        value = dictionary.get('value')
        country_of_issuance = dictionary.get('countryOfIssuance')

        # Return an object of this model
        return cls(mtype,
                   value,
                   country_of_issuance)
