# -*- coding: utf-8 -*-

"""
plastiqpublicapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from plastiqpublicapi.decorators import lazy_property
from plastiqpublicapi.configuration import Configuration
from plastiqpublicapi.configuration import Environment
from plastiqpublicapi.controllers.recipients_controller\
    import RecipientsController
from plastiqpublicapi.controllers.categories_controller\
    import CategoriesController
from plastiqpublicapi.controllers.client_secrets_controller\
    import ClientSecretsController
from plastiqpublicapi.controllers.documents_controller\
    import DocumentsController
from plastiqpublicapi.controllers.payers_controller import PayersController
from plastiqpublicapi.controllers.payments_controller import PaymentsController
from plastiqpublicapi.controllers.payment_methods_controller\
    import PaymentMethodsController


class PlastiqpublicapiClient(object):

    @lazy_property
    def recipients(self):
        return RecipientsController(self.config)

    @lazy_property
    def categories(self):
        return CategoriesController(self.config)

    @lazy_property
    def client_secrets(self):
        return ClientSecretsController(self.config)

    @lazy_property
    def documents(self):
        return DocumentsController(self.config)

    @lazy_property
    def payers(self):
        return PayersController(self.config)

    @lazy_property
    def payments(self):
        return PaymentsController(self.config)

    @lazy_property
    def payment_methods(self):
        return PaymentMethodsController(self.config)

    def __init__(self, timeout=60, max_retries=0, backoff_factor=2,
                 retry_statuses=[408, 413, 429, 500, 502, 503, 504, 521, 522, 524],
                 retry_methods=['GET', 'PUT'],
                 environment=Environment.PRODUCTION,
                 access_token='TODO: Replace', config=None):
        if config is None:
            self.config = Configuration(timeout=timeout,
                                        max_retries=max_retries,
                                        backoff_factor=backoff_factor,
                                        retry_statuses=retry_statuses,
                                        retry_methods=retry_methods,
                                        environment=environment,
                                        access_token=access_token)
        else:
            self.config = config
